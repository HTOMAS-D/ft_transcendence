version: '3.8'

services:
  database:
    image: postgres
    container_name: db
    command: -p ${DB_PORT}
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      # ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_HOST}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ${DB_DATA}:/var/lib/postgresql/data
    networks:
      - transcendence

  ### Backend containers (prefix with be_)
  be_main:
    build:
      context: ./django
      args:
        - APP_NAME=ft_transcendence
    container_name: be_main
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${DB_PORT}
      - PORT=${BE_PORT}
    ports:
      - ${BE_PORT}:${BE_PORT}
    networks:
      - transcendence
    volumes:
      - ./django/ft_transcendence:/code
      - ./django/share:/share
      - ${LOG_DIR}:/logs
    restart: on-failure
    depends_on:
      - database
  be_authentication:
    build:
      context: ./django
      args:
        - APP_NAME=authentication
    container_name: be_authentication
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${DB_PORT}
      - PORT=${BE_AUTH_PORT}

      - INTRA_ID=${INTRA_ID}
      - INTRA_SECRET=${INTRA_SECRET}
      - INTRA_REDIRECT_URI=${INTRA_REDIRECT_URI}

      - JWT_SECRET=${JWT_SECRET}
      - SESSION_LENGTH=${SESSION_LENGTH}
    ports:
      - ${BE_AUTH_PORT}:${BE_AUTH_PORT}
    networks:
      - transcendence
    volumes:
      - ./django/authentication:/code
      - ./django/share:/share
      - ${LOG_DIR}:/logs
    restart: on-failure
    depends_on:
      - database
  be_usermanagement:
    build:
      context: ./django
      args:
        - APP_NAME=userManagement
    container_name: be_user
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${DB_PORT}
      - PORT=${BE_USER_PORT}

      - INTRA_ID=${INTRA_ID}
      - INTRA_SECRET=${INTRA_SECRET}
      - INTRA_REDIRECT_URI=${INTRA_REDIRECT_URI}

      - JWT_SECRET=${JWT_SECRET}
    ports:
      - ${BE_USER_PORT}:${BE_USER_PORT}
    networks:
      - transcendence
    volumes:
      - ./django/userManagement:/code
      - ./django/share:/share
      - ${LOG_DIR}:/logs
    restart: on-failure
    depends_on:
      - database

  ### Nginx
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - ${FRONTEND_SECURE_PORT}:443
      - ${FRONTEND_PORT}:80
    networks:
      - transcendence
    volumes:
      # - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - ./nginx/ssl:/ssl
      - ${LOG_DIR}:/logs
      - ./frontend:/website
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/

      - PEM_PASS=${PEM_PASS}
      - SECURE_PORT=${FRONTEND_SECURE_PORT}

      - BE_USER_PORT=${BE_USER_PORT}
      - BE_AUTH_PORT=${BE_AUTH_PORT}
      - BE_PORT=${BE_PORT}
    restart: on-failure

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   environment:
  #     GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASS}
  #   volumes:
  #     - './grafana:/var/lib/grafana'
  #     - './grafana/provisioning:/etc/grafana/provisioning'
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - transcendence

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - './prometheus/:/etc/prometheus/'
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - transcendence

  # elasticsearch:
  #   container_name: elasticsearch
  #   image: elasticsearch:8.11.3
  #   # volumes:
  #   #   - ./elasticsearch/config:/usr/share/elasticsearch/config
  #   environment:
  #     - ELASTICSEARCH_NODE_NAME=elasticsearch
  #     - ELASTICSEARCH_CLUSTER_NAME=elasticsearch
  #     - ELASTICSEARCH_ES_JAVA_OPTS=-Xmx256m -Xms256m
  #     - ELASTICSEARCH_NETWORK_HOST=localhost
  #     - ELASTICSEARCH_DISCOVERY_TYPE=single-node
  #     - ELASTICSEARCH_NODE_MASTER=true
  #     - ELASTICSEARCH_NODE_DATA=true
  #     - ELASTICSEARCH_HTTP_ENABLE=true
  #     - ELASTICSEARCH_HTTP_PORT=9200
  #     # Disable HTTPS
  #     - ELASTICSEARCH_HTTPS_ENABLE=false
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - transcendence

  # logstash:
  #   container_name: logstash
  #   image: logstash:8.11.3
  #   volumes:
  #     - ./logstash/config:/usr/share/logstash/config   #### CHECK THIS
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - 5044:5044
  #   networks:
  #     - transcendence

  # kibana:
  #   container_name: kibana
  #   image: kibana:8.11.3
  #   environment:
  #     ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_HOST}
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - transcendence

networks:
  transcendence:
    driver: bridge